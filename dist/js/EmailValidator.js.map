{"version":3,"sources":["EmailValidator.js"],"names":["EmailValidator","selector","console","log","emailRegex","$field","value","match","errors","push","Validator"],"mappings":";;;;;;;;;;;;IAAMA,c;;;AAEL,yBAAYC,QAAZ,EAAsB;AAAA;;AACJ;AADI,8HACfA,QADe;;AAErBC,UAAQC,GAAR,CAAY,iCAAZ;AACA;AACA;AAJqB;AAKrB;;;;6BAGU;AACV;;AAEA,OAAIC,aAAa,wJAAjB;;AAEA,OAAK,CAAC,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,KAAlB,CAAyBH,UAAzB,CAAN,EAA6C;AAC5C,SAAKI,MAAL,CAAYC,IAAZ;AACA;;AAED;AACA;AACA;AACA;AACA;AACA;AAEA;;;;EA1B2BC,S","file":"EmailValidator.js","sourcesContent":["class EmailValidator extends Validator {\n\n\tconstructor(selector) {\n\t\tsuper(selector); // call constructor in Validator()\n\t\tconsole.log('constructor from EmailValidator')\n\t\t// We dont need this constructorâ€“ it doesnt do anything different from\n\t\t// the parent class constructor. It's here for illustrative purposes.\n\t}\n\n\n\tvalidate() {\n\t\tsuper.validate();\n\n\t\tlet emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n\t\tif ( !this.$field.value.match( emailRegex )) {\n\t\t\tthis.errors.push(`Your email address is not valid`);\n\t\t}\n\n\t\t// if (!this.$field.value.includes('@')) {\n\t\t// \tthis.errors.push(`Your email address needs an @`);\n\t\t// }\n\t\t// if (!this.$field.value.includes('.')) {\n\t\t// \tthis.errors.push(`Your email address needs an .`);\n\t\t// }\n\n\t}\n\n}"]}